/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.5.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'application'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    jcenter()
}

configurations {
    extension {
        canBeResolved = true
        canBeConsumed = false
    }

    extension.extendsFrom(implementation)
}

dependencies {
    def ananas_core = 'org.ananas:runner:0.10.0-SNAPSHOT'
    def without_slf4j_jdk14 = { exclude group: 'org.slf4j', module: 'slf4j-jdk14' }

    compileOnly ananas_core, without_slf4j_jdk14
    runtimeOnly ananas_core
    // add your extension dependencies here


    testImplementation 'junit:junit:4.12'
    testImplementation ananas_core
    testImplementation 'com.github.stefanbirkner:system-rules:1.19.0'
    // add your test dependencies here
    testImplementation 'com.jayway.jsonpath:json-path:2.4.0'
}

mainClassName = 'org.ananas.cli.Main'

[run].each { runTask ->
    configure(runTask) {
        systemProperties System.properties
        if (project.hasProperty('args')) {
            args project.args.split(' ')
        }
    }
}

jar {
    from {
        configurations.extension.collect { it.isDirectory() ? it : zipTree(it)  }
    }
}

task copyJar(type: Copy) {
    dependsOn jar
    outputs.dir "target/libs"

    from "$buildDir/libs"
    include "*.jar"
    into "target/libs"
}

task copyMetadata(type: Copy) {
    dependsOn jar
    outputs.dir "target"

    from "metadata.yml"
    into "target"
}

task dist {
    dependsOn copyJar
    dependsOn copyMetadata

}

test {
    //we want to display the following test events
    testLogging {
        // events "PASSED", "STARTED", "FAILED", "mKIPPED"
        showStandardStreams = true
    }

    systemProperties System.properties
    systemProperties 'java.security.policy': file("$projectDir/src/test/resources/test.policy").absolutePath
}

